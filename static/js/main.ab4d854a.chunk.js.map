{"version":3,"sources":["components/CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","baseAmount","onChangeAmount","type","className","value","onChange","map","option","key","BASE_URL","App","fromAmount","toAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEe,SAASA,EAAYC,GAAQ,IAEhCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,WACAC,EACAL,EADAK,eAER,OACI,6BACI,2BAAOC,KAAK,SAAQC,UAAU,QAAQC,MAAOJ,EAAYK,SAAUJ,IACnE,4BAAQG,MAAON,EAAkBO,SAAYN,GACxCF,EAAgBS,KAAI,SAAAC,GAAM,OAC3B,4BAAQC,IAAKD,EAAQH,MAAOG,GAAUA,QCXtD,IAAME,EAAW,yCA2EFC,MAzEf,WAAgB,IAQVC,EAAYC,EARH,EACiCC,mBAAS,IAD1C,mBACNhB,EADM,KACWiB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNQ,EALM,KAKEC,EALF,OAM2CT,oBAAS,GANpD,mBAMNU,EANM,KAMgBC,EANhB,KAkDb,OAxCGD,GACDZ,EAAaU,EACbT,EAAWS,EAASF,IAGpBR,EAAaU,EAASF,EACtBP,EAAWS,GAIbI,qBAAU,WACRC,MAAMjB,GACHkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CpB,EAAmB,CAACgB,EAAKK,MAAP,mBAAeH,OAAOC,KAAKH,EAAKI,UAClDlB,EAAgBc,EAAKK,MACrBjB,EAAca,GACdX,EAAgBU,EAAKI,MAAMH,SAE/B,IAEFN,qBAAU,WACW,MAAhBV,GAAsC,MAAdE,GACzBS,MAAM,GAAD,OAAIjB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CU,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAIV,EAAgBU,EAAKI,MAAMjB,SAE5C,CAACF,EAAaE,IAaf,oCACA,kDACA,kBAACtB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAoBiB,EACpBhB,iBAAqB,SAAAqC,GAAC,OAAIpB,EAAgBoB,EAAEC,OAAOjC,QACnDJ,WAAcW,EACdV,eAlBJ,SAAgCmC,GAC5Bd,EAAUc,EAAEC,OAAOjC,OACnBoB,GAAwB,MAmBxB,yBAAKrB,UAAU,UAAf,KACF,kBAACR,EAAD,CACEE,gBAAiBA,EACjBC,iBAAoBmB,EACpBlB,iBAAqB,SAAAqC,GAAC,OAAIlB,EAAckB,EAAEC,OAAOjC,QACjDJ,WAAcY,EACdX,eAtBJ,SAA8BmC,GAC5Bd,EAAUc,EAAEC,OAAOjC,OACnBoB,GAAwB,QChD5Bc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ab4d854a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n            currencyOptions, \r\n            selectedCurrency, \r\n            onChangeCurrency, \r\n            baseAmount, \r\n            onChangeAmount\r\n        } = props;\r\n    return (\r\n        <div>\r\n            <input type='number'className='input' value={baseAmount} onChange={onChangeAmount} />\r\n            <select value={selectedCurrency} onChange = {onChangeCurrency} >\r\n                {currencyOptions.map(option => (\r\n                <option key={option} value={option} >{option}</option>\r\n                ))}\r\n                \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './components/CurrencyRow'\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  \n  let fromAmount, toAmount;\n\n  if(amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  }\n  else {\n    fromAmount = amount / exchangeRate;\n    toAmount = amount;\n  }\n\n\n  useEffect(()=>{\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data =>{\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base,...Object.keys(data.rates)])\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      })\n  },[]);\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res=>res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency,toCurrency]);\n\n  function handleFromAmountChange(e) {\n      setAmount(e.target.value);\n      setAmountInFromCurrency(true);\n  }\n  \n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n}\n\n  return (\n    <>\n    <h1>Currency Converter</h1>\n    <CurrencyRow \n      currencyOptions={currencyOptions} \n      selectedCurrency = {fromCurrency} \n      onChangeCurrency = { e => setFromCurrency(e.target.value)}\n      baseAmount = {fromAmount}\n      onChangeAmount = {handleFromAmountChange}\n\n      />\n      <div className=\"equals\" >=</div>\n    <CurrencyRow \n      currencyOptions={currencyOptions} \n      selectedCurrency = {toCurrency} \n      onChangeCurrency = { e => setToCurrency(e.target.value)}\n      baseAmount = {toAmount}\n      onChangeAmount = {handleToAmountChange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}